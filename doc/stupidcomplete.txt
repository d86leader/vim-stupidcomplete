*stupidcomplete.txt*    A small indent-based usercomplete function for vim

						*stupidcomlete*

                               Reference Manual ~

							*stupidcomplete-toc*

1. Description					|stupidcomplete-intro|
2. Usage					|stupidcomplete-usage|
3. Options					|stupidcomplete-options|

The functionality mentioned here is a plugin, see |add-plugin|.
You can avoid loading this plugin by setting the "loaded_stupidcomplete" global
variable in your |vimrc| file: >
    :let g:loaded_stupidcomplete = 1

================================================================================
1. Intro					*stupidcomplete-intro*

Works just like any-word completion, except it's dumb and ignores words that
are not on a correct identaion level.

For example, when stationed on line 4 it will complete with aaa, bbb, ddd and
fff but not ccc and eee in this scenario: >
   aaa
      bbb
         ccc
      ddd
         eee
   fff
<

================================================================================
2. Usage					*stupidcomplete-usage*

The intended usage of this plugin is as a replacement for the default any-word
completion, but it's essense is that it is a usercomplete function. To use it
as such, this setting is nessesary: >
	set completefunction=Stupidcomplete <

And to have it as a replacement, those remappings are necessary: >
	inoremap <expr> <C-N> pumvisible() ? "\<C-N>":"\<C-X>\<C-U>"
	inoremap <expr> <C-P> pumvisible() ? "\<C-P>":"\<C-X>\<C-U>\<C-P>\<C-P>"
	
================================================================================
3. Options					*stupidcomplete-options*

Use *stupidcomplete_word_regex* to set which characters are recognised as part
of word. This can be set either as global or buffer, with buffer option taking
precedence. By default it is set to the following value: >
	let g:stupidcomplete_word_regex = '\m[A-Za-z0-9_]'


Use *stupidcomplete_lookupquotes* to set whether the text inside "" quotes
should be searched for the word. 0 for false, 1 for true (default) >
    let g:stupidcomplete_lookupquotes = 1

Use *stupidcomplete_ignorecomments* to set whether text after commentstring
should be unsearched for the word. 0 for false, 1 for true (default) >
    let g:stupidcomplete_ignorecomments = 1


vim:tw=78:ts=8:ft=help:norl:
